name: Build and Deploy Bicep Template and Docker Image

env:
  REGISTRY_NAME: 'duxappacr'
  IMAGE_VERSION: ''

on:
  push:
    branches:
      - main  # Change this to your default branch if different

jobs:
  # Job to build the Bicep template
  build-bicep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/cli@v1.0.7
        with:
          inlineScript: |
            az version

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Bicep Template
        run: |
          # Validate the Bicep template
          az bicep build --file main.bicep

  # Job to deploy the Bicep template
  deploy-bicep:
    runs-on: ubuntu-latest
    needs: build-bicep  # Ensure this job runs after the Bicep build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group BCSAI2024-DEVOPS-STUDENTS-A-DEV \
            --template-file main.bicep \
            --parameters main.parameters.json

  # Job to build and push Docker image
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure Container Registry
        run: |
          az acr login --name DuxAppacr  # Using your actual registry name

      - name: Set Image Version
        id: image-version
        run: |
          echo "IMAGE_VERSION=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build . -t <registry-name>.azurecr.io/my-app:${{ steps.image-version.outputs.version }}
          docker tag <registry-name>.azurecr.io/my-app:${{ steps.image-version.outputs.version }} <registry-name>.azurecr.io/my-app:latest
          docker push <registry-name>.azurecr.io/my-app:${{ steps.image-version.outputs.version }}
          docker push <registry-name>.azurecr.io/my-app:latest

  # Job to deploy Docker image to Azure Web App
  deploy-docker:
    runs-on: ubuntu-latest
    needs: build-docker  # Ensure this job runs after the Docker build job

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Docker Image to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "duxapp-app"
          images: "${{ env.REGISTRY_NAME }}.azurecr.io/my-app:${{ env.IMAGE_VERSION }}"
